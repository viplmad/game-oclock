name: Flutter CI

# This workflow is triggered on pushes to the repository.

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the bloc-pattern branch
  push:
    branches: [ bloc-pattern, server-migration ]

# on: push    # Default will running for every branch.

jobs:
  analysis:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3.3.0

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2.8.0
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'

    # Get flutter dependencies.
    - run: flutter pub get

    # Analyse lib
    - run: flutter analyze

    # Analyse logic
    - run: |
        cd ./logic
        flutter analyze

  build:
    needs: analysis
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v3.3.0
    - uses: actions/setup-java@v3.10.0
      with:
        distribution: 'temurin'
        java-version: '17'

    - run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2.8.0
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'

    # Get flutter dependencies.
    - run: flutter pub get

    # Build apk.
    - run: flutter build apk
      env:
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        ALIAS: ${{ secrets.ALIAS }}
        KEY_PATH: key.jks

    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v3.1.2
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
        retention-days: 5
